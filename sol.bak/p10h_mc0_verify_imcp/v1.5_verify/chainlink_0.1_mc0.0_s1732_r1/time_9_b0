Timer unit: 1e-09 s

Total time: 61.8002 s
File: /u/d/songyul3/pareto_SAT_S_2P_objsep/clauses_gen_7_34.py
Function: clause_gen_7_34 at line 21

Line #      Hits         Time  Per Hit   % Time  Line Contents
==============================================================
    21                                           def clause_gen_7_34(f,a, s, z, g, x, b0, b1, n_feature, n_points, n_labels, n_DC, tree_depth, n_bnodes, n_lnodes,
    22                                                           feature_index, HARD_CLAUSE_W, TC, Distance_Class, df, ML, CL, use_SmartPair):
    23                                           
    24                                           	# (7)
    25                                           	# (!a_t,j, !a_t,j')
    26         1       2011.0   2011.0      0.0  	tmp_time_counter_start = time.perf_counter()
    27                                           
    28         1      12827.0  12827.0      0.0  	feature_comb_ind = np.array(list(combinations(feature_index, 2)))
    29         1     103901.0 103901.0      0.0  	clause_list_7 = np.dstack((-a[:, feature_comb_ind[:, 0]], -a[:, feature_comb_ind[:, 1]])).reshape(-1, 2)
    30                                           	# write to file
    31         2      39677.0  19838.5      0.0  	np.savetxt(f, np.hstack((np.repeat(HARD_CLAUSE_W, len(clause_list_7)).reshape(-1, 1), clause_list_7,
    32         2       2201.0   1100.5      0.0  													np.zeros(len(clause_list_7)).reshape(-1, 1))), fmt='%d')
    33                                           
    34         1        817.0    817.0      0.0  	tmp_time_counter_end = time.perf_counter()
    35         1      28267.0  28267.0      0.0  	TC.counter(tmp_time_counter_start,
    36         1        214.0    214.0      0.0  								tmp_time_counter_end,
    37         1        246.0    246.0      0.0  								'7',
    38         1        391.0    391.0      0.0  								clause_list_7.shape )
    39                                           	## No need to add And(c), as all clauses are hard clauses
    40                                           
    41                                           	# (8)
    42                                           	# this is just the rows of a are the clauses
    43         1        622.0    622.0      0.0  	tmp_time_counter_start = time.perf_counter()
    44         1        244.0    244.0      0.0  	clause_list_8 = a
    45         1      72118.0  72118.0      0.0  	np.savetxt(f, np.hstack((np.repeat(HARD_CLAUSE_W, len(a)).reshape(-1, 1), a, np.zeros(len(a)).reshape(-1, 1))),
    46         1        258.0    258.0      0.0  						fmt='%d')
    47         1        653.0    653.0      0.0  	tmp_time_counter_end = time.perf_counter()
    48         1      18563.0  18563.0      0.0  	TC.counter(tmp_time_counter_start,
    49         1        210.0    210.0      0.0  								tmp_time_counter_end,
    50         1        627.0    627.0      0.0  								'8',
    51         1        421.0    421.0      0.0  								clause_list_8.shape )
    52                                           	# (9)
    53         1        647.0    647.0      0.0  	tmp_time_counter_start = time.perf_counter()
    54                                           
    55         1       2823.0   2823.0      0.0  	clause_list_9 = np.array([]).reshape(0, 3)
    56         3       2613.0    871.0      0.0  	for j in range(n_feature):
    57                                           			# j=[0,1,2,3][j%4]
    58                                           			# t=np.arange(n_bnodes)[j%len(np.arange(n_bnodes))]
    59                                           			# for t in range(n_bnodes):
    60         3    1732409.0 577469.7      0.0  			sort_ind = get_sorted_index(df, df.columns[j])
    61         3      65128.0  21709.3      0.0  			ind = np.repeat(sort_ind, 2)[1:-1].reshape(-1, 2)
    62                                           			# write a each chunk to file by 'j'
    63         3     218155.0  72718.3      0.0  			clause_list_9 = np.vstack((clause_list_9,
    64         3     165465.0  55155.0      0.0  																np.dstack((
    65         3     239662.0  79887.3      0.0  																					np.repeat(-a[:, j], len(ind), axis=0).reshape(-1, len(ind)), s[ind[:, 0], :].T,
    66         6      93197.0  15532.8      0.0  																					-s[ind[:, 1], :].T)).reshape(-1, 3)
    67                                           																))
    68         1   58145953.0 58145953.0      0.1  	np.savetxt(f, np.hstack((np.repeat(HARD_CLAUSE_W, len(clause_list_9)).reshape(-1, 1),
    69         1        328.0    328.0      0.0  													clause_list_9,
    70         2       9930.0   4965.0      0.0  													np.zeros(len(clause_list_9)).reshape(-1, 1))), fmt='%d')
    71                                           
    72         1       1637.0   1637.0      0.0  	tmp_time_counter_end = time.perf_counter()
    73         1      26237.0  26237.0      0.0  	TC.counter(tmp_time_counter_start,
    74         1        267.0    267.0      0.0  								tmp_time_counter_end,
    75         1        318.0    318.0      0.0  								'9',
    76         1        553.0    553.0      0.0  								clause_list_9.shape )
    77                                           
    78                                           	## (10) (!a_t,j, !s_i,t, s_i',t)
    79                                           	# (10)
    80         1        558.0    558.0      0.0  	tmp_time_counter_start = time.perf_counter()
    81                                           
    82         1       2879.0   2879.0      0.0  	clause_list_10 = np.array([]).reshape(0, 3)
    83         7       3038.0    434.0      0.0  	for b in range(n_bnodes):
    84                                           			# iterate over features
    85        21      55687.0   2651.8      0.0  			for ind_j, name_j in enumerate(df.columns):
    86        21    4187138.0 199387.5      0.0  					tmp_sort_by_f = df[name_j].sort_values()
    87        21    1514553.0  72121.6      0.0  					tmp_sorted_consec_pairs = np.repeat(tmp_sort_by_f.index.tolist(), 2)[1:-1].reshape(-1, 2)
    88                                           					# The index of the same point of the two column is the index of the consecutive pairs
    89        21      12428.0    591.8      0.0  					tmp_eq_pair_ind_list = \
    90        21    7550438.0 359544.7      0.0  					np.where(tmp_sort_by_f.iloc[:-1].reset_index(drop=True) == tmp_sort_by_f.iloc[1:].reset_index(drop=True))[0]
    91        21      13203.0    628.7      0.0  					if len(tmp_eq_pair_ind_list) > 0:
    92        21     385946.0  18378.4      0.0  							clause_list_10 = np.vstack((clause_list_10,
    93        21     352968.0  16808.0      0.0  																					np.vstack((np.repeat(-a[b, ind_j], len(tmp_eq_pair_ind_list)),
    94        21     201386.0   9589.8      0.0  																										-s[tmp_sorted_consec_pairs[tmp_eq_pair_ind_list, 0], b],
    95        21      79315.0   3776.9      0.0  																										s[tmp_sorted_consec_pairs[tmp_eq_pair_ind_list, 1], b])).T))
    96                                           	# write to file
    97         2      65533.0  32766.5      0.0  	np.savetxt(f, np.hstack((np.repeat(HARD_CLAUSE_W, len(clause_list_10)).reshape(-1, 1), clause_list_10,
    98         2       4586.0   2293.0      0.0  													np.zeros(len(clause_list_10)).reshape(-1, 1))), fmt='%d')
    99                                           
   100         1       1179.0   1179.0      0.0  	tmp_time_counter_end = time.perf_counter()
   101         1      21772.0  21772.0      0.0  	TC.counter(tmp_time_counter_start,
   102         1        254.0    254.0      0.0  								tmp_time_counter_end,
   103         1        345.0    345.0      0.0  								'10',
   104         1        430.0    430.0      0.0  								clause_list_10.shape )
   105                                           	## (11) $(\neg z_{i,t}, s_{i,t'}) \quad t \in T_L, x_i \in X, t'\in A_l(t)$
   106                                           	## (12) $(\neg z_{i,t}, \neg s_{i,t'}) \quad t \in T_L, x_i \in X, t'\in A_r(t)$
   107                                           
   108                                           	# (11) (12)
   109         1        602.0    602.0      0.0  	tmp_time_counter_start = time.perf_counter()
   110         1       2814.0   2814.0      0.0  	clause_list_11 = np.array([]).reshape(0, 2)
   111         1        939.0    939.0      0.0  	clause_list_12 = np.array([]).reshape(0, 2)
   112                                           	# (!z_i,t, s_i,t')
   113         8       3648.0    456.0      0.0  	for l in range(n_lnodes):
   114         8      65206.0   8150.8      0.0  			_, left_ancestors_list, right_ancestors_list = get_ancestor_nodes(tree_depth, l)
   115                                           
   116                                           			# 11
   117         8     298832.0  37354.0      0.0  			clause_list_11 = np.vstack((clause_list_11, np.hstack(
   118         8     173525.0  21690.6      0.0  					(np.repeat(-z[:, l], len(left_ancestors_list)).reshape(-1, 1), s[:, left_ancestors_list].reshape(-1, 1)))))
   119                                           			# 12
   120         8     163281.0  20410.1      0.0  			clause_list_12 = np.vstack((clause_list_12, np.hstack(
   121         8     155105.0  19388.1      0.0  					(np.repeat(-z[:, l], len(right_ancestors_list)).reshape(-1, 1), -s[:, right_ancestors_list].reshape(-1, 1)))))
   122                                           	# add all the clauses to solver
   123                                           	# 11
   124         2     146759.0  73379.5      0.0  	np.savetxt(f, np.hstack((np.repeat(HARD_CLAUSE_W, len(clause_list_11)).reshape(-1, 1), clause_list_11,
   125         2      15190.0   7595.0      0.0  													np.zeros(len(clause_list_11)).reshape(-1, 1))), fmt='%d')
   126                                           	# 12
   127         2     142216.0  71108.0      0.0  	np.savetxt(f, np.hstack((np.repeat(HARD_CLAUSE_W, len(clause_list_12)).reshape(-1, 1), clause_list_12,
   128         2       5300.0   2650.0      0.0  													np.zeros(len(clause_list_12)).reshape(-1, 1))), fmt='%d')
   129         1       1071.0   1071.0      0.0  	tmp_time_counter_end = time.perf_counter()
   130         1      22015.0  22015.0      0.0  	TC.counter(tmp_time_counter_start,
   131         1        247.0    247.0      0.0  								tmp_time_counter_end,
   132         1        259.0    259.0      0.0  								'11_12',
   133         1       1061.0   1061.0      0.0  								[clause_list_11.shape[0]*2,clause_list_11.shape[1]] )
   134                                           
   135                                           	## (13) $(z_{i,t},\underset{t' \in A_l(t)}{\vee} \neg s_{i,t'}, \underset{t' \in A_r(t)}{\vee} s_{i,t'}) \quad t\in T_L, x_i\in X$
   136                                           	# (13)
   137                                           	### For tree depth d, sum of left ancestor and right ancestor equals d.
   138                                           	### Then the length of the clause is the z + s[l&r clauses] -> 1+d
   139         1        562.0    562.0      0.0  	tmp_time_counter_start = time.perf_counter()
   140                                           
   141         1       2797.0   2797.0      0.0  	clause_list_13 = np.array([]).reshape(0, tree_depth + 1)
   142         8       3698.0    462.2      0.0  	for leaf in range(n_lnodes):
   143         8      49127.0   6140.9      0.0  			_, left_ancestors_list, right_ancestors_list = get_ancestor_nodes(tree_depth, leaf)
   144                                           
   145         8     288999.0  36124.9      0.0  			clause_list_13 = np.vstack((clause_list_13, np.hstack(
   146         8      87747.0  10968.4      0.0  					(z[:, leaf].reshape(-1, 1), -s[:, left_ancestors_list], s[:, right_ancestors_list]))))
   147                                           
   148                                           	# write all the clauses to file
   149         2     106322.0  53161.0      0.0  	np.savetxt(f, np.hstack((np.repeat(HARD_CLAUSE_W, len(clause_list_13)).reshape(-1, 1), clause_list_13,
   150         2      11065.0   5532.5      0.0  													np.zeros(len(clause_list_13)).reshape(-1, 1))), fmt='%d')
   151                                           
   152         1       1008.0   1008.0      0.0  	tmp_time_counter_end = time.perf_counter()
   153         1      22284.0  22284.0      0.0  	TC.counter(tmp_time_counter_start,
   154         1        355.0    355.0      0.0  								tmp_time_counter_end,
   155         1        357.0    357.0      0.0  								'13',
   156         1        580.0    580.0      0.0  								clause_list_13.shape)
   157                                           	# (14), (15)
   158                                           	# (!a_t,j, s_#(1,j),t)
   159                                           	# (!a_t,j, s_#(-1,j),t)
   160         1        680.0    680.0      0.0  	tmp_time_counter_start = time.perf_counter()
   161                                           
   162         1       2655.0   2655.0      0.0  	clause_list_14 = np.array([]).reshape(0, 2)
   163         1        949.0    949.0      0.0  	clause_list_15 = np.array([]).reshape(0, 2)
   164         3       2141.0    713.7      0.0  	for j in range(n_feature):
   165                                           			# get the index of dataset sorted on j ascending
   166         3     752670.0 250890.0      0.0  			sort_ind = get_sorted_index(df, df.columns[j])
   167                                           
   168         3      92563.0  30854.3      0.0  			clause_list_14 = np.vstack((clause_list_14, np.hstack((-a[:, j].reshape(-1, 1), s[sort_ind[0], :].reshape(-1, 1)))))
   169         3      24535.0   8178.3      0.0  			clause_list_15 = np.vstack(
   170         3      38148.0  12716.0      0.0  					(clause_list_15, np.hstack((-a[:, j].reshape(-1, 1), -s[sort_ind[-1], :].reshape(-1, 1)))))
   171                                           
   172                                           	# write all the clauses to file
   173                                           	# (14)
   174         2      19806.0   9903.0      0.0  	np.savetxt(f, np.hstack((np.repeat(HARD_CLAUSE_W, len(clause_list_14)).reshape(-1, 1), clause_list_14,
   175         2       1879.0    939.5      0.0  													np.zeros(len(clause_list_14)).reshape(-1, 1))), fmt='%d')# (15)
   176         2      19857.0   9928.5      0.0  	np.savetxt(f, np.hstack((np.repeat(HARD_CLAUSE_W, len(clause_list_15)).reshape(-1, 1), clause_list_15,
   177         2       1691.0    845.5      0.0  													np.zeros(len(clause_list_15)).reshape(-1, 1))), fmt='%d')
   178                                           
   179         1       1092.0   1092.0      0.0  	tmp_time_counter_end = time.perf_counter()
   180         1      33535.0  33535.0      0.0  	TC.counter(tmp_time_counter_start,
   181         1        349.0    349.0      0.0  								tmp_time_counter_end,
   182         1        463.0    463.0      0.0  								'14_15',
   183         1        874.0    874.0      0.0  								[clause_list_14.shape[0]*2, clause_list_14.shape[1]])
   184                                           
   185                                           	### Extended Hard Clauses
   186                                           	# (16)
   187                                           	# note: ! if num labels < 3, then c is 0 or negative !
   188                                           	# The number of rows equals to the number of leaf node
   189         1        636.0    636.0      0.0  	tmp_time_counter_start = time.perf_counter()
   190                                           
   191         1      29062.0  29062.0      0.0  	clause_list_16 = np.hstack((g[:, :-2].reshape(-1,1), -g[:, 1:-1].reshape(-1,1)))
   192                                           	# np.savetxt(f, np.repeat(0,5).reshape(1,-1), fmt='%d')
   193                                           	# np.savetxt(f, np.hstack(
   194                                           	#     (np.repeat(HARD_CLAUSE_W, n_lnodes).reshape(-1, 1), clause_list_16, np.zeros(n_lnodes).reshape(-1, 1))), fmt='%d')
   195                                           
   196         1       1773.0   1773.0      0.0  	write_clauses_to_file(f, clause_list_16, HARD_CLAUSE_W)
   197                                           
   198         1        500.0    500.0      0.0  	tmp_time_counter_end = time.perf_counter()
   199         1      11462.0  11462.0      0.0  	TC.counter(tmp_time_counter_start,
   200         1        333.0    333.0      0.0  								tmp_time_counter_end,
   201         1        354.0    354.0      0.0  								'16',
   202         1        478.0    478.0      0.0  								clause_list_16.shape)
   203                                           
   204                                           
   205                                           	# (17) (18)
   206         1        512.0    512.0      0.0  	tmp_time_counter_start = time.perf_counter()
   207         1        469.0    469.0      0.0  	clause_list_17, clause_list_18 = [], []  # np.array([]).reshape(0,3),np.array([]).reshape(0,3)
   208         1       1379.0   1379.0      0.0  	for k in range(n_labels - 1):
   209      1000     380363.0    380.4      0.0  			for i in range(n_points):
   210      8000    3032290.0    379.0      0.0  					for l in range(n_lnodes):
   211                                           							# (17)
   212      8000   22033998.0   2754.2      0.0  							clause_list_17 += [[-z[i, l], -g[l, k], x[i, k]]]
   213                                           							# (18)
   214      8000   22082286.0   2760.3      0.0  							clause_list_18 += [[-z[i, l], g[l, k], -x[i, k]]]
   215                                           
   216                                           	# add to solver
   217                                           	# (17)
   218         2    1995172.0 997586.0      0.0  	np.savetxt(f, np.hstack((np.repeat(HARD_CLAUSE_W, len(clause_list_17)).reshape(-1, 1), np.array(clause_list_17),
   219         2       7004.0   3502.0      0.0  													np.zeros(len(clause_list_17)).reshape(-1, 1))), fmt='%d')
   220                                           	# (18)
   221         2    1885500.0 942750.0      0.0  	np.savetxt(f, np.hstack((np.repeat(HARD_CLAUSE_W, len(clause_list_18)).reshape(-1, 1), np.array(clause_list_18),
   222         2       6337.0   3168.5      0.0  													np.zeros(len(clause_list_18)).reshape(-1, 1))), fmt='%d')
   223                                           
   224         1       1341.0   1341.0      0.0  	tmp_time_counter_end = time.perf_counter()
   225         1      23634.0  23634.0      0.0  	TC.counter(tmp_time_counter_start,
   226         1        379.0    379.0      0.0  								tmp_time_counter_end,
   227         1        427.0    427.0      0.0  								'17_18',
   228         1       1007.0   1007.0      0.0  								[len(clause_list_17)*2, len(clause_list_17[0])])
   229                                           
   230                                           	# (19)
   231                                           	# This assumes that the number of data points is at least the same as the
   232                                           	#  number of clusters
   233                                           	# num(n_labels-1) diagnols of x
   234                                           	# num of rows is also num(n_labels-1)
   235         1        634.0    634.0      0.0  	tmp_time_counter_start = time.perf_counter()
   236                                           
   237         1       5098.0   5098.0      0.0  	clause_list_19 = -x.diagonal()[:n_labels - 1].reshape(-1, 1)
   238         1      35947.0  35947.0      0.0  	np.savetxt(f, np.hstack((np.repeat(HARD_CLAUSE_W, n_labels - 1).reshape(-1, 1),
   239         1        341.0    341.0      0.0  													clause_list_19,
   240         2       1835.0    917.5      0.0  													np.zeros(n_labels - 1).reshape(-1, 1))), fmt='%d')
   241                                           
   242         1        676.0    676.0      0.0  	tmp_time_counter_end = time.perf_counter()
   243         1      12427.0  12427.0      0.0  	TC.counter(tmp_time_counter_start,
   244         1        384.0    384.0      0.0  								tmp_time_counter_end,
   245         1        421.0    421.0      0.0  								'19',
   246         1        496.0    496.0      0.0  								clause_list_19.shape)
   247                                           	# (20)
   248                                           	# use the default ascending index order of the dataset
   249                                           	# Assume number of points larger than number of clusters
   250                                           	# Note: c<i and c starts from 2 (index 1), so i starts from 3 (index 2)
   251         1        607.0    607.0      0.0  	tmp_time_counter_start = time.perf_counter()
   252                                           
   253         1        415.0    415.0      0.0  	clause_list_len_20 = []
   254                                           	# iterate over each point
   255       998     500105.0    501.1      0.0  	for i in range(2, n_points):
   256                                           			# iterate over c, c<i
   257                                           			# if i smaller than the number of labels, use the number of labels instead
   258                                           			# clause_list_20.append(np.vstack((x_[i,1:min(i,n_labels-1) ], x_[:i, 1:min(i,n_labels-1)])).T)
   259       998     700095.0    701.5      0.0  			curr_c_value = min(i, n_labels - 1)
   260       998   10237137.0  10257.7      0.0  			clause_20_tmp = np.vstack((-x[i, 1:curr_c_value], x[:i, 0:curr_c_value - 1])).T
   261                                           			# print(
   262                                           			#   f'--{np.repeat(HARD_CLAUSE_W, n_labels - 2).reshape(-1, 1).shape} - {clause_20_tmp.shape} - {np.zeros(n_labels - 2).reshape(-1, 1)}')
   263       998     646630.0    647.9      0.0  			clause_list_len_20.append(clause_20_tmp.shape)
   264       998   25435126.0  25486.1      0.0  			np.savetxt(f, np.hstack((np.repeat(HARD_CLAUSE_W, curr_c_value - 1).reshape(-1, 1),
   265       998     420362.0    421.2      0.0  															clause_20_tmp,
   266      1996    1549486.0    776.3      0.0  															np.zeros(curr_c_value - 1).reshape(-1, 1))), fmt='%d')
   267                                           
   268         1       1164.0   1164.0      0.0  	tmp_time_counter_end = time.perf_counter()
   269         1      18933.0  18933.0      0.0  	TC.counter(tmp_time_counter_start,
   270         1        442.0    442.0      0.0  								tmp_time_counter_end,
   271         1        472.0    472.0      0.0  								'20',
   272         1        519.0    519.0      0.0  								clause_list_len_20[-1])
   273                                           	# (21)
   274                                           	# assume |X|>=K, ensue that minimum k' or maximum k clusters
   275                                           	# all assigned cluster non-empty
   276                                           	# k is the number of clusters
   277         1        739.0    739.0      0.0  	tmp_time_counter_start = time.perf_counter()
   278                                           
   279         1       2110.0   2110.0      0.0  	clause_list_21 = x[:, -2].reshape(1, -1)
   280         1     196735.0 196735.0      0.0  	np.savetxt(f, np.hstack((np.repeat(HARD_CLAUSE_W, 1).reshape(1, -1),
   281         1        441.0    441.0      0.0  													clause_list_21,
   282         2       1792.0    896.0      0.0  													np.zeros(1).reshape(1, -1))), fmt='%d')
   283                                           
   284         1        822.0    822.0      0.0  	tmp_time_counter_end = time.perf_counter()
   285         1      14254.0  14254.0      0.0  	TC.counter(tmp_time_counter_start,
   286         1        445.0    445.0      0.0  								tmp_time_counter_end,
   287         1        448.0    448.0      0.0  								'21',
   288         1        529.0    529.0      0.0  								clause_list_21.shape)
   289                                           
   290                                           	### SMART PAIR clauses
   291                                           	# sort ML and CL ascending
   292         1        557.0    557.0      0.0  	if use_SmartPair:
   293         1        673.0    673.0      0.0  		SmartPair_time_counter_start = time.perf_counter()
   294                                           		#
   295         1      25173.0  25173.0      0.0  		CL_descending,CL_descending_index = sort_ascending_ML_CL(CL, df)
   296         1       2283.0   2283.0      0.0  		CL_descending = CL_descending[::-1].tolist()
   297         1        830.0    830.0      0.0  		CL_descending_index = CL_descending_index[::-1]
   298         1      10886.0  10886.0      0.0  		ML_ascending,ML_ascending_index = sort_ascending_ML_CL(ML, df)
   299         1        816.0    816.0      0.0  		ML_ascending = ML_ascending.tolist()
   300                                           
   301         1      29323.0  29323.0      0.0  		t1 = node_graph(unique_encode_generator(), len(df))
   302         1       2375.0   2375.0      0.0  		clause_list_22_23, clause_list_25_26 = [np.array([]).reshape(0, 2)] * 2
   303         1       1136.0   1136.0      0.0  		clause_list_24 = np.array([]).reshape(0, 4)
   304         1        505.0    505.0      0.0  		clause_list_27_28 = []
   305         1        483.0    483.0      0.0  		clause_list_29 = []
   306         1        494.0    494.0      0.0  		clause_list_b0_b1 = []
   307         1        501.0    501.0      0.0  		clause_list_30_31 = []
   308                                           
   309                                           		# np.vstack((x[pair[0], :-2], x[pair[1], :-2], x[pair[0], 1:-1],x[pair[1], 1:-1])).T
   310                                           
   311                                           
   312         1        504.0    504.0      0.0  		infeasible_flag = False
   313         1        758.0    758.0      0.0  		while not infeasible_flag:
   314         1        702.0    702.0      0.0  			MLCL_time_counter_start = time.perf_counter()
   315                                           
   316         1        694.0    694.0      0.0  			for pair in ML_ascending:
   317                                           				p0_cc_ind,p1_cc_ind = t1.get_cc_ind(pair)
   318                                           				if not t1.check_inner(p0_cc_ind,p1_cc_ind):
   319                                           					t1.update_pos_edge(pair,p0_cc_ind,p1_cc_ind)
   320                                           					# *add clauses (25,26) for (x_i, x_i')
   321                                           					# the length of (25) and (26) are both n_label -1, so the total length is 2*n_label-2
   322                                           					clause_list_25_26 = np.vstack((clause_list_25_26,
   323                                           												np.vstack((np.vstack((-x[pair[0], :-1], x[pair[1], :-1])).T,
   324                                           															np.vstack((x[pair[0], :-1], -x[pair[1], :-1])).T))
   325                                           												))
   326                                           
   327                                           			#
   328         1        579.0    579.0      0.0  			for pair in CL_descending:
   329                                           				p0_cc_ind,p1_cc_ind = t1.get_cc_ind(pair)
   330                                           				if t1.check_inner(p0_cc_ind,p1_cc_ind):
   331                                           					print("------infeasible")
   332                                           					infeasible_flag = True
   333                                           					break
   334                                           				if not t1.check_crossing(p0_cc_ind,p1_cc_ind):
   335                                           					t1.update_neg_edge(pair,p0_cc_ind,p1_cc_ind)
   336                                           					# *add clauses (22,23,24) for (x_i, x_i')
   337                                           					# c22=[Or(x[pair[0]][0], x[pair[1]][0])]
   338                                           					# c23=[Or(Not(x[pair[0]][-2]),
   339                                           					#         Not(x[pair[1]][-2]))]
   340                                           					# The length of the list of the two clauses (22), (23) is 2
   341                                           					clause_list_22_23 = np.vstack((clause_list_22_23,
   342                                           												np.vstack(
   343                                           													([x[pair[0], 0], x[pair[1], 0]], [-x[pair[0], -2], -x[pair[1], -2]]))
   344                                           												))
   345                                           
   346                                           					clause_list_24 = np.vstack((clause_list_24,
   347                                           												np.vstack((-x[pair[0], :-2], -x[pair[1], :-2], x[pair[0], 1:-1],
   348                                           														x[pair[1], 1:-1])).T
   349                                           												))
   350                                           
   351         1        601.0    601.0      0.0  			if infeasible_flag:
   352                                           				break
   353         1        683.0    683.0      0.0  			b1_time_counter_start = time.perf_counter()
   354                                           
   355         1      19349.0  19349.0      0.0  			E_plus_hat = copy.deepcopy(t1.E_plus)
   356         1       4389.0   4389.0      0.0  			cc_set_hat = copy.deepcopy(t1.cc_set)
   357         1       6685.0   6685.0      0.0  			node_table_hat = copy.deepcopy(t1.node_table)
   358         1        538.0    538.0      0.0  			b1w_break_flag = False
   359         1        518.0    518.0      0.0  			b1_counter = 0
   360       990     533857.0    539.2      0.0  			for w in range(len(Distance_Class)):
   361    499500  320098505.0    640.8      0.5  				for pair_ind, pair in enumerate(Distance_Class[w]):
   362    499500 2069007168.0   4142.2      3.3  					p0_cc_ind,p1_cc_ind = t1.get_cc_ind(pair)
   363    499500  504903594.0   1010.8      0.8  					if t1.check_crossing(p0_cc_ind,p1_cc_ind):
   364                                           						# *add !b+w
   365                                           						clause_list_b0_b1.append(-b1[w])
   366                                           						# o.add(Not(b1[w]))
   367                                           						b1w_break_flag = True
   368                                           						print(f"-b1w_break_flag break")
   369                                           						break
   370    498501  539633262.0   1082.5      0.9  					if not t1.check_inner(p0_cc_ind,p1_cc_ind):
   371       999    5862846.0   5868.7      0.0  						t1.update_pos_edge(pair,p0_cc_ind,p1_cc_ind)
   372                                           						# *add clause (30,31) for (x_i, x_i') and w
   373                                           						# c30,c31=[],[]
   374       999     864880.0    865.7      0.0  						for c in range(n_labels - 1):
   375                                           							# (30)
   376       999    1411388.0   1412.8      0.0  							clause_list_30_31.append([-b1[w], -x[pair[0]][c], x[pair[1]][c]])
   377                                           							# clause = Or(Not(b1[w]),Not(x[pair[0]][c]), x[pair[1]][c])
   378                                           							# c30 += [clause]
   379                                           							# (31)
   380       999    1254126.0   1255.4      0.0  							clause_list_30_31.append([-b1[w], x[pair[0]][c], -x[pair[1]][c]])
   381                                           							# clause = Or(Not(b1[w]),x[pair[0]][c], Not(x[pair[1]][c]))
   382    499500  293636934.0    587.9      0.5  					b1_counter+=1
   383                                           
   384                                           						#
   385       990     531376.0    536.7      0.0  				if b1w_break_flag:
   386                                           					print(f"--b1w_break_flag break")
   387                                           					break
   388                                           
   389                                           			#
   390         1       3640.0   3640.0      0.0  			b0_time_counter_start = time.perf_counter()
   391         1      13639.0  13639.0      0.0  			t1.E_plus = E_plus_hat
   392         1      17935.0  17935.0      0.0  			t1.cc_set = cc_set_hat
   393         1       1141.0   1141.0      0.0  			t1.node_table = node_table_hat 
   394         1        676.0    676.0      0.0  			b0w_break_flag = False
   395         1        591.0    591.0      0.0  			counter_p4 = 0
   396       990     733168.0    740.6      0.0  			for w in range(len(Distance_Class) - 1, -1, -1):
   397    499500  364975260.0    730.7      0.6  				for pair_ind, pair in enumerate(Distance_Class[w][::-1]):
   398    499500 3669977239.0   7347.3      5.9  					p0_cc_ind,p1_cc_ind = t1.get_cc_ind(pair)
   399                                           					#
   400    499500  652230153.0   1305.8      1.1  					if t1.check_inner(p0_cc_ind,p1_cc_ind):
   401                                           						# *add clause b-w
   402                                           						clause_list_b0_b1.append(b0[w])
   403                                           						# o.add(b0[w])
   404                                           						b0w_break_flag = True
   405                                           						print(f"-b0 flag True")
   406                                           						break
   407    499500 46388047377.0  92869.0     75.1  					if not t1.check_crossing(p0_cc_ind,p1_cc_ind):
   408    499500 1266894709.0   2536.3      2.0  						t1.update_neg_edge(pair,p0_cc_ind,p1_cc_ind)
   409                                           						# *add clauses (27,28,29) for (x_i, x_i') and w
   410                                           						# c27 = [Or(b0[w], x[pair[0]][0], x[pair[1]][0])]
   411    499500  649068781.0   1299.4      1.1  						clause_list_27_28.append([b0[w], x[pair[0], 0], x[pair[1], 0]])
   412                                           						# c28 = [Or(b0[w], Not(x[pair[0]][-2]), Not(x[pair[1]][-2]))]
   413    499500 1185520748.0   2373.4      1.9  						clause_list_27_28.append([b0[w], -x[pair[0], -2], -x[pair[1], -2]])
   414    499500  438424049.0    877.7      0.7  						for c in range(n_labels - 2):
   415                                           							clause_list_29.append([b0[w], -x[pair[0], c], -x[pair[1], c], x[pair[0], c + 1], x[pair[1], c + 1]])
   416                                           
   417    499500  323675622.0    648.0      0.5  					counter_p4 += 1
   418       990     693864.0    700.9      0.0  				if b0w_break_flag:
   419                                           					print(f"-- b0 flag break")
   420                                           					break
   421                                           
   422                                           			# finished
   423         1        751.0    751.0      0.0  			infeasible_flag = True
   424                                           
   425                                           
   426                                           
   427                                           		# write the clauses generated in smart pair to file
   428         1       4664.0   4664.0      0.0  		clause_list_b0_b1 = np.array(clause_list_b0_b1).reshape(-1, 1)
   429                                           
   430         1        999.0    999.0      0.0  		counter = 0
   431         7       5661.0    808.7      0.0  		for clause_list in [clause_list_22_23, clause_list_25_26, clause_list_24,\
   432         1        696.0    696.0      0.0  												clause_list_27_28, clause_list_29,
   433         1        571.0    571.0      0.0  												clause_list_30_31, clause_list_b0_b1]:
   434                                           			# try:
   435         7 2944947541.0 420706791.6      4.8  			write_clauses_to_file(f, clause_list, HARD_CLAUSE_W)
   436         7       8369.0   1195.6      0.0  			counter+= len(clause_list)
   437                                           
   438                                           		# # write the clauses generated in smart pair to file
   439                                           
   440         1       2582.0   2582.0      0.0  		SmartPair_time_counter_end = time.perf_counter()
   441         1      56310.0  56310.0      0.0  		TC.counter(SmartPair_time_counter_start,
   442         1        945.0    945.0      0.0  									SmartPair_time_counter_end,
   443         1        792.0    792.0      0.0  									'smtPr_22-31',
   444         1        552.0    552.0      0.0  									counter)
   445                                           
   446                                           
   447         1       1411.0   1411.0      0.0  		tmp_time_counter_start = time.perf_counter()
   448                                           		############## END OF SmartPair ################
   449                                           	else:
   450                                           		# (22) (23) the cluster in the paper starts from 1, assume index 0
   451                                           		# k is the number of clusters
   452                                           
   453                                           		tmp_time_counter_start = time.perf_counter()
   454                                           
   455                                           		clause_list_22 = np.vstack((x[CL[:, 0], 0], x[CL[:, 1], 0])).T
   456                                           		write_clauses_to_file(f, clause_list_22, HARD_CLAUSE_W)
   457                                           
   458                                           		
   459                                           		tmp_time_counter_end = time.perf_counter()
   460                                           		TC.counter(tmp_time_counter_start,
   461                                           							tmp_time_counter_end,
   462                                           							'22',
   463                                           							clause_list_22.shape)
   464                                           
   465                                           		tmp_time_counter_start = time.perf_counter()
   466                                           
   467                                           		clause_list_23 = np.vstack((-x[CL[:, 0], -2], -x[CL[:, 1], -2])).T
   468                                           		write_clauses_to_file(f, clause_list_23, HARD_CLAUSE_W)
   469                                           
   470                                           		tmp_time_counter_end = time.perf_counter()
   471                                           		TC.counter(tmp_time_counter_start,
   472                                           							tmp_time_counter_end,
   473                                           							'23',
   474                                           							clause_list_23.shape)
   475                                           		# (24)
   476                                           		tmp_time_counter_start = time.perf_counter()
   477                                           
   478                                           		clause_list_24 = np.hstack((-x[CL[:, 0], :-2].reshape(-1, 1),
   479                                           																-x[CL[:, 1], :-2].reshape(-1, 1),
   480                                           																x[CL[:, 0], 1:-1].reshape(-1, 1),
   481                                           																x[CL[:, 1], 1:-1].reshape(-1, 1)))
   482                                           		write_clauses_to_file(f, clause_list_24, HARD_CLAUSE_W)
   483                                           
   484                                           		tmp_time_counter_end = time.perf_counter()
   485                                           		TC.counter(tmp_time_counter_start,
   486                                           							tmp_time_counter_end,
   487                                           							'24',
   488                                           							clause_list_24.shape)
   489                                           		# (25)
   490                                           		tmp_time_counter_start = time.perf_counter()
   491                                           
   492                                           		clause_list_25 = np.hstack((-x[ML[:, 0], :-1].reshape(-1, 1), x[ML[:, 1], :-1].reshape(-1, 1)))
   493                                           		write_clauses_to_file(f, clause_list_25, HARD_CLAUSE_W)
   494                                           
   495                                           		tmp_time_counter_end = time.perf_counter()
   496                                           		TC.counter(tmp_time_counter_start,
   497                                           							tmp_time_counter_end,
   498                                           							'25',
   499                                           							clause_list_25.shape)
   500                                           		# (26)
   501                                           		tmp_time_counter_start = time.perf_counter()
   502                                           
   503                                           		clause_list_26 = np.hstack((x[ML[:, 0], :-1].reshape(-1, 1), -x[ML[:, 1], :-1].reshape(-1, 1)))
   504                                           		write_clauses_to_file(f, clause_list_26, HARD_CLAUSE_W)
   505                                           
   506                                           		tmp_time_counter_end = time.perf_counter()
   507                                           		TC.counter(tmp_time_counter_start,
   508                                           							tmp_time_counter_end,
   509                                           							'26',
   510                                           							clause_list_26.shape)
   511                                           		# (27)
   512                                           		tmp_time_counter_start = time.perf_counter()
   513                                           
   514                                           		clause_list_27 = []
   515                                           
   516                                           		for w_ind, p in enumerate(Distance_Class):
   517                                           			tmp_pair = np.array(p)
   518                                           			clause_list_27.append(np.vstack((np.repeat(b0[w_ind], len(tmp_pair)), x[tmp_pair[:, 0], 0], x[tmp_pair[:, 1], 0])).T)
   519                                           
   520                                           		clause_list_27 = np.concatenate(clause_list_27, axis=0)
   521                                           		write_clauses_to_file(f, clause_list_27, HARD_CLAUSE_W)
   522                                           
   523                                           		# np.savetxt(f, np.hstack((np.repeat(HARD_CLAUSE_W, clause_list_27.shape[0]).reshape(-1, 1),
   524                                           		#                           clause_list_27,
   525                                           		#                           np.zeros(clause_list_27.shape[0]).reshape(-1, 1))), fmt='%d')
   526                                           
   527                                           		tmp_time_counter_end = time.perf_counter()
   528                                           		TC.counter(tmp_time_counter_start,
   529                                           							tmp_time_counter_end,
   530                                           							'27',
   531                                           							[len(clause_list_27), len(clause_list_27[0])])
   532                                           		# (28)
   533                                           		tmp_time_counter_start = time.perf_counter()
   534                                           
   535                                           		clause_list_28 = []
   536                                           
   537                                           		for w_ind, p in enumerate(Distance_Class):
   538                                           			tmp_pair = np.array(p)
   539                                           			clause_list_28.append(
   540                                           				np.vstack((np.repeat(b0[w_ind], len(tmp_pair)), -x[tmp_pair[:, 0], -2], -x[tmp_pair[:, 1], -2])).T)
   541                                           
   542                                           		clause_list_28 = np.concatenate(clause_list_28, axis=0)
   543                                           		# write_clauses_to_file(f, clause_list_28, HARD_CLAUSE_W)
   544                                           		write_clauses_to_file(f, clause_list_28, HARD_CLAUSE_W)
   545                                           
   546                                           		tmp_time_counter_end = time.perf_counter()
   547                                           		TC.counter(tmp_time_counter_start,
   548                                           							tmp_time_counter_end,
   549                                           							'28',
   550                                           							[len(clause_list_28), len(clause_list_28[0])])
   551                                           		# (29)
   552                                           		tmp_time_counter_start = time.perf_counter()
   553                                           
   554                                           		clause_list_29 = []
   555                                           
   556                                           		for w_ind, p in enumerate(Distance_Class):
   557                                           			# print(f"{w_ind} -- {p}")
   558                                           			tmp_pair = np.array(p)
   559                                           			clause_list_29.append(np.hstack((
   560                                           				np.repeat(b0[w_ind], len(tmp_pair) * (n_labels - 2)).reshape(-1, 1),
   561                                           				-x[tmp_pair[:, 0], :-2].reshape(-1, 1),
   562                                           				-x[tmp_pair[:, 1], :-2].reshape(-1, 1),
   563                                           				x[tmp_pair[:, 0], 1:-1].reshape(-1, 1),
   564                                           				x[tmp_pair[:, 1], 1:-1].reshape(-1, 1)))
   565                                           			)
   566                                           
   567                                           		clause_list_29 = np.concatenate(clause_list_29, axis=0)
   568                                           		write_clauses_to_file(f, clause_list_29, HARD_CLAUSE_W)
   569                                           
   570                                           		tmp_time_counter_end = time.perf_counter()
   571                                           		TC.counter(tmp_time_counter_start,
   572                                           							tmp_time_counter_end,
   573                                           							'29',
   574                                           							[len(clause_list_29), 0 if not len(clause_list_29) else len(clause_list_29[0])])
   575                                           
   576                                           		# (30) (31)
   577                                           		tmp_time_counter_start = time.perf_counter()
   578                                           
   579                                           		clause_list_30, clause_list_31 = [], []
   580                                           
   581                                           		for w_ind, p in enumerate(Distance_Class):
   582                                           			# print(f"{w_ind} -- {p}")
   583                                           			tmp_pair = np.array(p)
   584                                           			# (30)
   585                                           			clause_list_30.append(np.hstack((np.repeat(-b1[w_ind], len(tmp_pair) * (n_labels - 1)).reshape(-1, 1),
   586                                           																			-x[tmp_pair[:, 0], :-1].reshape(-1, 1),
   587                                           																			x[tmp_pair[:, 1], :-1].reshape(-1, 1)
   588                                           																			))
   589                                           														)
   590                                           			# (31)
   591                                           			clause_list_31.append(np.hstack((np.repeat(-b1[w_ind], len(tmp_pair) * (n_labels - 1)).reshape(-1, 1),
   592                                           																			x[tmp_pair[:, 0], :-1].reshape(-1, 1),
   593                                           																			-x[tmp_pair[:, 1], :-1].reshape(-1, 1)
   594                                           																			))
   595                                           														)
   596                                           
   597                                           		# (30)
   598                                           		clause_list_30 = np.concatenate(clause_list_30, axis=0)
   599                                           		write_clauses_to_file(f, clause_list_30, HARD_CLAUSE_W)
   600                                           
   601                                           		# (31)
   602                                           		clause_list_31 = np.concatenate(clause_list_31, axis=0)
   603                                           		write_clauses_to_file(f, clause_list_31, HARD_CLAUSE_W)
   604                                           
   605                                           		tmp_time_counter_end = time.perf_counter()
   606                                           		TC.counter(tmp_time_counter_start,
   607                                           							tmp_time_counter_end,
   608                                           							'30_31',
   609                                           							[len(clause_list_30) * 2, len(clause_list_30[0])])
   610                                           		# # write the clauses generated in smart pair to file
   611                                           		#
   612                                           		tmp_time_counter_start = time.perf_counter()
   613                                           
   614                                           	
   615                                           	#####################  END OF HARD CLAUSES #######################
   616                                           
   617                                           
   618                                           
   619                                           	# (32) (33) (34)
   620                                           	# total list length is 3*n_DC -2
   621                                           	# w>1 -> w starts from the second DC, that is (index) 1
   622         1        981.0    981.0      0.0  	tmp_time_counter_start = time.perf_counter()
   623                                           
   624         1      34342.0  34342.0      0.0  	clause_list_32_33_34 = np.vstack((np.vstack((-b0[1:], b0[:-1])).T,
   625         1      14158.0  14158.0      0.0  																		np.vstack((-b1[1:], b1[:-1])).T,
   626         1      10473.0  10473.0      0.0  																		np.vstack((-b1, b0)).T))
   627                                           
   628         1    7452402.0 7452402.0      0.0  	np.savetxt(f, np.hstack((np.repeat(HARD_CLAUSE_W, 3 * n_DC - 2).reshape(-1, 1),
   629         1        895.0    895.0      0.0  													clause_list_32_33_34,
   630         2       3363.0   1681.5      0.0  													np.zeros(3 * n_DC - 2).reshape(-1, 1))), fmt='%d')
   631                                           
   632         1       1657.0   1657.0      0.0  	tmp_time_counter_end = time.perf_counter()
   633         1      17872.0  17872.0      0.0  	TC.counter(tmp_time_counter_start,
   634         1        752.0    752.0      0.0  								tmp_time_counter_end,
   635         1        976.0    976.0      0.0  								'32_33_34',
   636         1       1023.0   1023.0      0.0  								clause_list_32_33_34.shape)

